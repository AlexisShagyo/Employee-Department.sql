(TASK: Your company doesn't have a database with all the employee information yet. Create one according to the following criteria)

Create Table employee
(employee_id int,
first_name varchar(50) NOT NULL,
last_name varchar(50) NOT NULL,
job_position varchar (50) NOT NULL,
salary numeric (8,2),
start_date DATE NOT NULL,
birth_date DATE,
store_id int,
department_id int,
manager_id int
)

Create Table department
(department_id int NOT NULL,
department char (50),
division char (50)
)


(TASK: Remove the birth_date data as it won't be necessary for the company)

Alter Table employee
Drop Column birth_date

Insert into employee VALUES
( 1,'Morrie','Conaboy','CTO',21268.94,'2005-04-30',1,1,NULL),
(2,'Miller','McQuarter','Head of BI',14614.00,'2019-07-23',1,1,1),
(3,'Christalle','McKenny','Head of Sales',12586.00,'1999-02-05',2,3,1),
(4,'Summer','Siares','SQL Analyst',9515.00,'2006-05-31',2,1,6),
(5,'Romain','Hacard','BI Consultant',7107.00,'2012-09-24',1,1,6),
(6,'Ely','Luscombe','Team Lead Analytics',12564.00,'2002-06-12',1,1,2),
(7,'Clywd','Filyashin','Senior SQL Analyst',10510.00,'2010-04-05',2,1,2),
(8,'Chris','Blague','SQL Analyst',9428.00,'2007-09-30',2,2,6),
(9,'Roddie','Izen','Software Engineer',4937.00,'2019-03-22',1,4,6),
(10,'Ammamaria','Izhak','Customer Support',2355.00,'2005-03-17',2,5,3),
(11,'Carlyn','Stripp','Customer Support',3060.00,'2013-09-06',1,5,3),
(12,'Reuben','McRorie','Software Engineer',7119.00,'1995-12-31',1,5,6),
(13,'Gates','Raison','Marketing Specialist',3910.00,'2013-07-18',1,3,3),
(14,'Jordanna','Raitt','Marketing Specialist',5844.00,'2011-10-23',2,3,3),
(15,'Guendolen','Motton','BI Consultant',8330.00,'2011-01-10',2,3,6),
(16,'Doria','Turbat','Senior SQL Analyst',9278.00,'2010-08-15',1,1,6),
(17,'Cort','Bewlie','Project Manager',5463.00,'2013-05-26',1,5,3),
(18,'Margarita','Eaden','SQL Analyst',5977.00,'2014-09-24',2,1,6),
(19,'Hetty','Kingaby','SQL Analyst',7541.00,'2009-08-17',1,2,6),
(20,'Lief','Robardley','SQL Analyst',8981.00,'2002-10-23',2,3,6),
(21,'Zaneta','Carlozzi','Working Student',1525.00,'2006-08-29',1,3,6),
(22,'Giana','Matz','Working Student',1036.00,'2016-03-18',1,3,6),
(23,'Hamil','Evershed','Web Developper',3088.00,'2022-02-03',1,4,2),
(24,'Lowe','Diamant','Web Developper',6418.00,'2018-12-31',1,4,2),
(25,'Jack','Franklin','SQL Analyst',6771.00,'2013-05-18',1,2,2),
(26,'Jessica','Brown','SQL Analyst',8566.00,'2003-10-23',1,1,2)

Insert Into department VALUES
(1,'Analytics','IT'),
(2,'Finance','Administration'),
(3,'Sales','Sales'),
(4,'Website','IT'),
(5,'Back Office','Administration')


(TASK: Jack Franklin gets promoted to 'Senior SQL Analyst' and the salary raises to 7200)

Update employee 
SET job_position = 'Senior SQL Analyst'
WHERE first_name = 'Jack' AND last_name = 'Franklin'

Update employee
SET salary = 7200.00
WHERE first_name = 'Jack' AND last_name = 'Franklin'


(TASK: The responsible people decided to rename the job_position Customer Support to Customer Specialist)

Update employee
SET job_position = 'Customer Specialist'
WHERE job_position = 'Customer Support'


(TASK: All SQL Analysts including Senior SQL Analysts get a raise of 6%)

UPDATE employee
SET salary=salary*1.06
WHERE job_position LIKE '%SQL Analyst'


(TASK: What is the average salary of a SQL Analyst in the company (excluding Senior SQL Analyst)?)

Select ROUND(AVG(salary),2) 
From employee
WHERE job_position = 'SQL Analyst'


(TASK: What is the average salaries per division?)

SELECT 
division,
ROUND(AVG(e.salary),2)
FROM employee AS e
LEFT JOIN department AS d 
ON e.department_id=d.department_id
GROUP BY division
ORDER BY 2 


(TASK: Select the following: employee_id, first_name, last_name, job_position, salary and return the average salary for every job_position. Round up the average to 2 decimals and order them by employee_id)

Select employee_id, 
first_name, 
last_name, 
job_position, 
salary, 
ROUND(AVG(salary) OVER(PARTITION BY job_position),2) 
AS ave_salary_position
From employee
Order by employee_id


(TASK: How many people are earning less than the Average Salary per Job Position?)

Select COUNT(*) From ( 
Select salary, ROUND(AVG(salary) 
OVER(PARTITION BY job_position),2) 
AS ave_salary_position
From employee)
Where salary < ave_salary_position 
